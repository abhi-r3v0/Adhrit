{"version":3,"file":"layout.js","sources":["../../../../../../src/cdk/layout/layout-module.ts","../../../../../../src/cdk/layout/media-matcher.ts","../../../../../../src/cdk/layout/breakpoints-observer.ts","../../../../../../src/cdk/layout/breakpoints.ts","../../../../../../src/cdk/layout/public-api.ts","../../../../../../src/cdk/layout/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\n\n@NgModule({})\nexport class LayoutModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility: Set<string> = new Set<string>();\n\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode: HTMLStyleElement | undefined;\n\n/** A utility for calling matchMedia queries. */\n@Injectable({providedIn: 'root'})\nexport class MediaMatcher {\n  /** The internal matchMedia method to return back a MediaQueryList like object. */\n  private _matchMedia: (query: string) => MediaQueryList;\n\n  constructor(private _platform: Platform) {\n    this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n      // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) :\n      noopMatchMedia;\n  }\n\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   */\n  matchMedia(query: string): MediaQueryList {\n    if (this._platform.WEBKIT) {\n      createEmptyStyleRule(query);\n    }\n    return this._matchMedia(query);\n  }\n}\n\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query: string) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head!.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      (mediaQueryStyleNode.sheet as CSSStyleSheet)\n          .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query: string): MediaQueryList {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  } as any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceArray} from '@angular/cdk/coercion';\nimport {Injectable, NgZone, OnDestroy} from '@angular/core';\nimport {combineLatest, concat, Observable, Observer, Subject} from 'rxjs';\nimport {debounceTime, map, skip, startWith, take, takeUntil} from 'rxjs/operators';\nimport {MediaMatcher} from './media-matcher';\n\n\n/** The current state of a layout breakpoint. */\nexport interface BreakpointState {\n  /** Whether the breakpoint is currently matching. */\n  matches: boolean;\n  /**\n   * A key boolean pair for each query provided to the observe method,\n   * with its current matched state.\n   */\n  breakpoints: {\n    [key: string]: boolean;\n  };\n}\n\n/** The current state of a layout breakpoint. */\ninterface InternalBreakpointState {\n  /** Whether the breakpoint is currently matching. */\n  matches: boolean;\n  /** The media query being to be matched */\n  query: string;\n}\n\ninterface Query {\n  observable: Observable<InternalBreakpointState>;\n  mql: MediaQueryList;\n}\n\n/** Utility for checking the matching state of @media queries. */\n@Injectable({providedIn: 'root'})\nexport class BreakpointObserver implements OnDestroy {\n  /**  A map of all media queries currently being listened for. */\n  private _queries = new Map<string, Query>();\n  /** A subject for all other observables to takeUntil based on. */\n  private _destroySubject = new Subject<void>();\n\n  constructor(private _mediaMatcher: MediaMatcher, private _zone: NgZone) {}\n\n  /** Completes the active subject, signalling to all other observables to complete. */\n  ngOnDestroy() {\n    this._destroySubject.next();\n    this._destroySubject.complete();\n  }\n\n  /**\n   * Whether one or more media queries match the current viewport size.\n   * @param value One or more media queries to check.\n   * @returns Whether any of the media queries match.\n   */\n  isMatched(value: string | readonly string[]): boolean {\n    const queries = splitQueries(coerceArray(value));\n    return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n  }\n\n  /**\n   * Gets an observable of results for the given queries that will emit new results for any changes\n   * in matching of the given queries.\n   * @param value One or more media queries to check.\n   * @returns A stream of matches for the given queries.\n   */\n  observe(value: string | readonly string[]): Observable<BreakpointState> {\n    const queries = splitQueries(coerceArray(value));\n    const observables = queries.map(query => this._registerQuery(query).observable);\n\n    let stateObservable = combineLatest(observables);\n    // Emit the first state immediately, and then debounce the subsequent emissions.\n    stateObservable = concat(\n      stateObservable.pipe(take(1)),\n      stateObservable.pipe(skip(1), debounceTime(0)));\n    return stateObservable.pipe(map(breakpointStates => {\n      const response: BreakpointState = {\n        matches: false,\n        breakpoints: {},\n      };\n      breakpointStates.forEach(({matches, query}) => {\n        response.matches = response.matches || matches;\n        response.breakpoints[query] = matches;\n      });\n      return response;\n    }));\n  }\n\n  /** Registers a specific query to be listened for. */\n  private _registerQuery(query: string): Query {\n    // Only set up a new MediaQueryList if it is not already being listened for.\n    if (this._queries.has(query)) {\n      return this._queries.get(query)!;\n    }\n\n    const mql = this._mediaMatcher.matchMedia(query);\n\n    // Create callback for match changes and add it is as a listener.\n    const queryObservable = new Observable((observer: Observer<MediaQueryList>) => {\n      // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n      // back into the zone because matchMedia is only included in Zone.js by loading the\n      // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n      // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n      // patches it.\n      const handler = (e: any) => this._zone.run(() => observer.next(e));\n      mql.addListener(handler);\n\n      return () => {\n        mql.removeListener(handler);\n      };\n    }).pipe(\n      startWith(mql),\n      map(({matches}) => ({query, matches})),\n      takeUntil(this._destroySubject)\n    );\n\n    // Add the MediaQueryList to the set of queries.\n    const output = {observable: queryObservable, mql};\n    this._queries.set(query, output);\n    return output;\n  }\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: readonly string[]): readonly string[] {\n  return queries.map(query => query.split(','))\n                .reduce((a1, a2) => a1.concat(a2))\n                .map(query => query.trim());\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nexport const Breakpoints = {\n  XSmall: '(max-width: 599.99px)',\n  Small: '(min-width: 600px) and (max-width: 959.99px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n  XLarge: '(min-width: 1920px)',\n\n  Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n           '(max-width: 959.99px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {LayoutModule} from './layout-module';\nexport {BreakpointObserver, BreakpointState} from './breakpoints-observer';\nexport {Breakpoints} from './breakpoints';\nexport {MediaMatcher} from './media-matcher';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}