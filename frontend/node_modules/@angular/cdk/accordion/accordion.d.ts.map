{"version":3,"file":"accordion.d.ts","sources":["accordion.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { InjectionToken, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport declare const CDK_ACCORDION: InjectionToken<CdkAccordion>;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nexport declare class CdkAccordion implements OnDestroy, OnChanges {\n    /** Emits when the state of the accordion changes */\n    readonly _stateChanges: Subject<SimpleChanges>;\n    /** Stream that emits true/false when openAll/closeAll is triggered. */\n    readonly _openCloseAllActions: Subject<boolean>;\n    /** A readonly id value to use for unique selection coordination. */\n    readonly id: string;\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi(): boolean;\n    set multi(multi: boolean);\n    private _multi;\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll(): void;\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    private _openCloseAll;\n    static ngAcceptInputType_multi: BooleanInput;\n}\n"]}