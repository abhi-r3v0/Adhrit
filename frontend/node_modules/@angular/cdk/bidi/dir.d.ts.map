{"version":3,"file":"dir.d.ts","sources":["dir.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, AfterContentInit, OnDestroy } from '@angular/core';\nimport { Direction, Directionality } from './directionality';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nexport declare class Dir implements Directionality, AfterContentInit, OnDestroy {\n    /** Normalized direction that accounts for invalid/unsupported values. */\n    private _dir;\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized;\n    /** Direction as passed in by the consumer. */\n    _rawDir: string;\n    /** Event emitted when the direction changes. */\n    change: EventEmitter<Direction>;\n    /** @docs-private */\n    get dir(): Direction;\n    set dir(value: Direction);\n    /** Current layout direction of the element. */\n    get value(): Direction;\n    /** Initialize once default value has been set. */\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n}\n"]}