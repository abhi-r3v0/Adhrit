{"version":3,"file":"cdk-accordion.umd.js","sources":["../../../../../src/cdk/accordion/accordion.ts","../../../../../src/cdk/accordion/accordion-item.ts","../../../../../src/cdk/accordion/accordion-module.ts","../../../../../src/cdk/accordion/public-api.ts","../../../../../src/cdk/accordion/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Directive, InjectionToken, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId = 0;\n\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const CDK_ACCORDION = new InjectionToken<CdkAccordion>('CdkAccordion');\n\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\n@Directive({\n  selector: 'cdk-accordion, [cdkAccordion]',\n  exportAs: 'cdkAccordion',\n  providers: [{provide: CDK_ACCORDION, useExisting: CdkAccordion}],\n})\nexport class CdkAccordion implements OnDestroy, OnChanges {\n  /** Emits when the state of the accordion changes */\n  readonly _stateChanges = new Subject<SimpleChanges>();\n\n  /** Stream that emits true/false when openAll/closeAll is triggered. */\n  readonly _openCloseAllActions: Subject<boolean> = new Subject<boolean>();\n\n  /** A readonly id value to use for unique selection coordination. */\n  readonly id = `cdk-accordion-${nextId++}`;\n\n  /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n  @Input()\n  get multi(): boolean { return this._multi; }\n  set multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\n  private _multi: boolean = false;\n\n  /** Opens all enabled accordion items in an accordion where multi is enabled. */\n  openAll(): void {\n    this._openCloseAll(true);\n  }\n\n  /** Closes all enabled accordion items in an accordion where multi is enabled. */\n  closeAll(): void {\n    this._openCloseAll(false);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._stateChanges.next(changes);\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  private _openCloseAll(expanded: boolean): void {\n    if (this.multi) {\n      this._openCloseAllActions.next(expanded);\n    }\n  }\n\n  static ngAcceptInputType_multi: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Output,\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n  SkipSelf,\n  Inject,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {CDK_ACCORDION, CdkAccordion} from './accordion';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs';\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\n@Directive({\n  selector: 'cdk-accordion-item, [cdkAccordionItem]',\n  exportAs: 'cdkAccordionItem',\n  providers: [\n    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n    // registering to the same accordion.\n    {provide: CDK_ACCORDION, useValue: undefined},\n  ],\n})\nexport class CdkAccordionItem implements OnDestroy {\n  /** Subscription to openAll/closeAll events. */\n  private _openCloseAllSubscription = Subscription.EMPTY;\n  /** Event emitted every time the AccordionItem is closed. */\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted every time the AccordionItem is opened. */\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  /** Event emitted when the AccordionItem is destroyed. */\n  @Output() destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Emits whenever the expanded state of the accordion changes.\n   * Primarily used to facilitate two-way binding.\n   * @docs-private\n   */\n  @Output() expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The unique AccordionItem id. */\n  readonly id: string = `cdk-accordion-child-${nextId++}`;\n\n  /** Whether the AccordionItem is expanded. */\n  @Input()\n  get expanded(): any { return this._expanded; }\n  set expanded(expanded: any) {\n    expanded = coerceBooleanProperty(expanded);\n\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      this.expandedChange.emit(expanded);\n\n      if (expanded) {\n        this.opened.emit();\n        /**\n         * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n         * the name value is the id of the accordion.\n         */\n        const accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _expanded = false;\n\n  /** Whether the AccordionItem is disabled. */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(disabled: any) { this._disabled = coerceBooleanProperty(disabled); }\n  private _disabled: boolean = false;\n\n  /** Unregister function for _expansionDispatcher. */\n  private _removeUniqueSelectionListener: () => void = () => {};\n\n  constructor(@Optional() @Inject(CDK_ACCORDION) @SkipSelf() public accordion: CdkAccordion,\n              private _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n\n    // When an accordion item is hosted in an accordion, subscribe to open/close events.\n    if (this.accordion) {\n      this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n    }\n  }\n\n  /** Emits an event for the accordion item being destroyed. */\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.destroyed.emit();\n    this.destroyed.complete();\n    this._removeUniqueSelectionListener();\n    this._openCloseAllSubscription.unsubscribe();\n  }\n\n  /** Toggles the expanded state of the accordion item. */\n  toggle(): void {\n    if (!this.disabled) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to false. */\n  close(): void {\n    if (!this.disabled) {\n      this.expanded = false;\n    }\n  }\n\n  /** Sets the expanded state of the accordion item to true. */\n  open(): void {\n    if (!this.disabled) {\n      this.expanded = true;\n    }\n  }\n\n  private _subscribeToOpenCloseAllActions(): Subscription {\n    return this.accordion._openCloseAllActions.subscribe(expanded => {\n      // Only change expanded state if item is enabled\n      if (!this.disabled) {\n        this.expanded = expanded;\n      }\n    });\n  }\n\n  static ngAcceptInputType_expanded: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkAccordion} from './accordion';\nimport {CdkAccordionItem} from './accordion-item';\n\n\n@NgModule({\n  exports: [CdkAccordion, CdkAccordionItem],\n  declarations: [CdkAccordion, CdkAccordionItem],\n})\nexport class CdkAccordionModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {CdkAccordionItem} from './accordion-item';\nexport {CdkAccordion} from './accordion';\nexport * from './accordion-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CDK_ACCORDION as Éµangular_material_src_cdk_accordion_accordion_a} from './accordion';"],"names":["InjectionToken","Subject","coerceBooleanProperty","Directive","Input","nextId","Subscription","EventEmitter","Optional","Inject","SkipSelf","ChangeDetectorRef","UniqueSelectionDispatcher","Output","NgModule"],"mappings":";;;;;;IAAA;;;;;;;AAQA,IAIA;IACA,IAAI,MAAM,GAAG,CAAC,CAAC;IAEf;;;;;AAKA,QAAa,aAAa,GAAG,IAAIA,mBAAc,CAAe,cAAc,CAAC,CAAC;IAE9E;;;AAQA;QALA;;YAOW,kBAAa,GAAG,IAAIC,YAAO,EAAiB,CAAC;;YAG7C,yBAAoB,GAAqB,IAAIA,YAAO,EAAW,CAAC;;YAGhE,OAAE,GAAG,mBAAiB,MAAM,EAAI,CAAC;YAMlC,WAAM,GAAY,KAAK,CAAC;SA2BjC;QA9BC,sBACI,+BAAK;;iBADT,cACuB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;iBAC5C,UAAU,KAAc,IAAI,IAAI,CAAC,MAAM,GAAGC,8BAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;;;WAD7B;;QAK5C,8BAAO,GAAP;YACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC1B;;QAGD,+BAAQ,GAAR;YACE,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC3B;QAED,kCAAW,GAAX,UAAY,OAAsB;YAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC;QAED,kCAAW,GAAX;YACE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;SAC/B;QAEO,oCAAa,GAAb,UAAc,QAAiB;YACrC,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC1C;SACF;;;;gBA3CFC,cAAS,SAAC;oBACT,QAAQ,EAAE,+BAA+B;oBACzC,QAAQ,EAAE,cAAc;oBACxB,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,YAAY,EAAC,CAAC;iBACjE;;;wBAYEC,UAAK;;;ICzCR;;;;;;;AAQA,IAgBA;IACA,IAAIC,QAAM,GAAG,CAAC,CAAC;aAYwB,SAAS;IAVhD;;;;AAaA;QA2DE,0BAAkE,SAAuB,EACrE,kBAAqC,EACnC,oBAA+C;YAFrE,iBAeC;YAfiE,cAAS,GAAT,SAAS,CAAc;YACrE,uBAAkB,GAAlB,kBAAkB,CAAmB;YACnC,yBAAoB,GAApB,oBAAoB,CAA2B;;YA3D7D,8BAAyB,GAAGC,iBAAY,CAAC,KAAK,CAAC;;YAE7C,WAAM,GAAuB,IAAIC,iBAAY,EAAQ,CAAC;;YAEtD,WAAM,GAAuB,IAAIA,iBAAY,EAAQ,CAAC;;YAEtD,cAAS,GAAuB,IAAIA,iBAAY,EAAQ,CAAC;;;;;;YAOzD,mBAAc,GAA0B,IAAIA,iBAAY,EAAW,CAAC;;YAGrE,OAAE,GAAW,yBAAuBF,QAAM,EAAI,CAAC;YA8BhD,cAAS,GAAG,KAAK,CAAC;YAMlB,cAAS,GAAY,KAAK,CAAC;;YAG3B,mCAA8B,GAAe,eAAQ,CAAC;YAK5D,IAAI,CAAC,8BAA8B;gBACjC,oBAAoB,CAAC,MAAM,CAAC,UAAC,EAAU,EAAE,WAAmB;oBAC1D,IAAI,KAAI,CAAC,SAAS,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK;wBACvC,KAAI,CAAC,SAAS,CAAC,EAAE,KAAK,WAAW,IAAI,KAAI,CAAC,EAAE,KAAK,EAAE,EAAE;wBACvD,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;qBACvB;iBACF,CAAC,CAAC;;YAGL,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC;aACzE;SACF;QArDD,sBACI,sCAAQ;;iBADZ,cACsB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;iBAC9C,UAAa,QAAa;gBACxB,QAAQ,GAAGH,8BAAqB,CAAC,QAAQ,CAAC,CAAC;;gBAG3C,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;oBAC/B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;oBAC1B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAEnC,IAAI,QAAQ,EAAE;wBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;;;;;wBAKnB,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;wBACjE,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,WAAW,CAAC,CAAC;qBACxD;yBAAM;wBACL,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;qBACpB;;;oBAID,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;iBACxC;aACF;;;WAzB6C;QA6B9C,sBACI,sCAAQ;;iBADZ,cACiB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;iBACzC,UAAa,QAAa,IAAI,IAAI,CAAC,SAAS,GAAGA,8BAAqB,CAAC,QAAQ,CAAC,CAAC,EAAE;;;WADxC;;QAyBzC,sCAAW,GAAX;YACE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,8BAA8B,EAAE,CAAC;YACtC,IAAI,CAAC,yBAAyB,CAAC,WAAW,EAAE,CAAC;SAC9C;;QAGD,iCAAM,GAAN;YACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aAChC;SACF;;QAGD,gCAAK,GAAL;YACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB;SACF;;QAGD,+BAAI,GAAJ;YACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;SACF;QAEO,0DAA+B,GAA/B;YAAA,iBAOP;YANC,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,SAAS,CAAC,UAAA,QAAQ;;gBAE3D,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE;oBAClB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;iBAC1B;aACF,CAAC,CAAC;SACJ;;;;gBA3HFC,cAAS,SAAC;oBACT,QAAQ,EAAE,wCAAwC;oBAClD,QAAQ,EAAE,kBAAkB;oBAC5B,SAAS,EAAE;;;wBAGT,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,IAAW,EAAC;qBAC9C;iBACF;;;gBAnBsB,YAAY,uBA+EpBK,aAAQ,YAAIC,WAAM,SAAC,aAAa,cAAGC,aAAQ;gBApFxDC,sBAAiB;gBAIXC,qCAAyB;;;yBAyB9BC,WAAM;yBAENA,WAAM;4BAENA,WAAM;iCAONA,WAAM;2BAMNT,UAAK;2BA8BLA,UAAK;;;IC3FR;;;;;;;AAQA;QASA;;;;;gBAJCU,aAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC;oBACzC,YAAY,EAAE,CAAC,YAAY,EAAE,gBAAgB,CAAC;iBAC/C;;;IChBD;;;;;;OAMG;;ICNH;;OAEG;;;;;;;;;;;;;;;"}