{"version":3,"sources":["src/cdk/cdk-coercion.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdk","coercion","core","this","_isNumberValue","value","isNaN","parseFloat","Number","coerceArray","Array","isArray","coerceBooleanProperty","coerceCssPixelValue","coerceElement","elementOrRef","ElementRef","nativeElement","coerceNumberProperty","fallbackValue","Object","defineProperty"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,kBACtE,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,wBAAyB,CAAC,UAAW,iBAAkBJ,GACjFA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,IAAMT,EAAOQ,GAAGC,KAAO,GAAIT,EAAOQ,GAAGC,IAAIC,SAAW,IAAKV,EAAOQ,GAAGG,MAHjJ,CAIEC,MAAM,SAAWV,EAASS,GAAQ;;;;;;;OA6BhC,SAASE,EAAeC,GAIpB,OAAQC,MAAMC,WAAWF,MAAYC,MAAME,OAAOH;;;;;;;;;;;;;;;;;;;;;;AA4DtDZ,EAAQW,eAAiBA,EACzBX,EAAQgB,YAnDR,SAASA,EAAYJ,GACjB,OAAOK,MAAMC,QAAQN,GAASA,EAAQ,CAACA;;;;;;;QAmD3CZ,EAAQmB,sBArFR,SAASA,EAAsBP,GAC3B,OAAgB,MAATA,GAAiB,GAAKA,GAAU;;;;;;;QAqF3CZ,EAAQoB,oBAzCR,SAASA,EAAoBR,GACzB,OAAa,MAATA,EACO,GAEa,iBAAVA,EAAqBA,EAAQA,EAAQ;;;;;;;QAsCvDZ,EAAQqB,cAxBR,SAASA,EAAcC,GACnB,OAAOA,aAAwBb,EAAKc,WAAaD,EAAaE,cAAgBF,GAwBlFtB,EAAQyB,qBA7ER,SAASA,EAAqBb,EAAOc,GAEjC,YADsB,IAAlBA,IAA4BA,EAAgB,GACzCf,EAAeC,GAASG,OAAOH,GAASc,GA6EnDC,OAAOC,eAAe5B,EAAS,aAAc,CAAEY,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk/coercion', ['exports', '@angular/core'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdk = global.ng.cdk || {}, global.ng.cdk.coercion = {}), global.ng.core));\n}(this, (function (exports, core) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Coerces a data-bound value (typically a string) to a boolean. */\n    function coerceBooleanProperty(value) {\n        return value != null && \"\" + value !== 'false';\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function coerceNumberProperty(value, fallbackValue) {\n        if (fallbackValue === void 0) { fallbackValue = 0; }\n        return _isNumberValue(value) ? Number(value) : fallbackValue;\n    }\n    /**\n     * Whether the provided value is considered a number.\n     * @docs-private\n     */\n    function _isNumberValue(value) {\n        // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n        // and other non-number values as NaN, where Number just uses 0) but it considers the string\n        // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n        return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function coerceArray(value) {\n        return Array.isArray(value) ? value : [value];\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Coerces a value to a CSS pixel value. */\n    function coerceCssPixelValue(value) {\n        if (value == null) {\n            return '';\n        }\n        return typeof value === 'string' ? value : value + \"px\";\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Coerces an ElementRef or an Element into an element.\n     * Useful for APIs that can accept either a ref or the native element itself.\n     */\n    function coerceElement(elementOrRef) {\n        return elementOrRef instanceof core.ElementRef ? elementOrRef.nativeElement : elementOrRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports._isNumberValue = _isNumberValue;\n    exports.coerceArray = coerceArray;\n    exports.coerceBooleanProperty = coerceBooleanProperty;\n    exports.coerceCssPixelValue = coerceCssPixelValue;\n    exports.coerceElement = coerceElement;\n    exports.coerceNumberProperty = coerceNumberProperty;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-coercion.umd.js.map\n"]}