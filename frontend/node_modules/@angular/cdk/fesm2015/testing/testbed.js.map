{"version":3,"file":"testing__testbed.js","sources":["../../../../../../src/cdk/testing/testbed/task-state-zone-interceptor.ts","../../../../../../src/cdk/testing/testbed/fake-events/event-objects.ts","../../../../../../src/cdk/testing/testbed/fake-events/dispatch-events.ts","../../../../../../src/cdk/testing/testbed/fake-events/element-focus.ts","../../../../../../src/cdk/testing/testbed/fake-events/type-in-element.ts","../../../../../../src/cdk/testing/testbed/fake-events/index.ts","../../../../../../src/cdk/testing/testbed/unit-test-element.ts","../../../../../../src/cdk/testing/testbed/testbed-harness-environment.ts","../../../../../../src/cdk/testing/testbed/public-api.ts","../../../../../../src/cdk/testing/testbed/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {ProxyZone, ProxyZoneStatic} from './proxy-zone-types';\n\n/** Current state of the intercepted zone. */\nexport interface TaskState {\n  /** Whether the zone is stable (i.e. no microtasks and macrotasks). */\n  stable: boolean;\n}\n\n/** Unique symbol that is used to patch a property to a proxy zone. */\nconst stateObservableSymbol = Symbol('ProxyZone_PATCHED#stateObservable');\n\n/** Type that describes a potentially patched proxy zone instance. */\ntype PatchedProxyZone = ProxyZone & {\n  [stateObservableSymbol]: undefined|Observable<TaskState>;\n};\n\n/**\n * Interceptor that can be set up in a `ProxyZone` instance. The interceptor\n * will keep track of the task state and emit whenever the state changes.\n *\n * This serves as a workaround for https://github.com/angular/angular/issues/32896.\n */\nexport class TaskStateZoneInterceptor {\n  /** Subject that can be used to emit a new state change. */\n  private _stateSubject: BehaviorSubject<TaskState> = new BehaviorSubject<TaskState>(\n      this._lastState ? this._getTaskStateFromInternalZoneState(this._lastState) : {stable: true});\n\n  /** Public observable that emits whenever the task state changes. */\n  readonly state: Observable<TaskState> = this._stateSubject;\n\n  constructor(private _lastState: HasTaskState|null) {}\n\n  /** This will be called whenever the task state changes in the intercepted zone. */\n  onHasTask(delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) {\n    if (current === target) {\n      this._stateSubject.next(this._getTaskStateFromInternalZoneState(hasTaskState));\n    }\n  }\n\n  /** Gets the task state from the internal ZoneJS task state. */\n  private _getTaskStateFromInternalZoneState(state: HasTaskState): TaskState {\n    return {stable: !state.macroTask && !state.microTask};\n  }\n\n  /**\n   * Sets up the custom task state Zone interceptor in the  `ProxyZone`. Throws if\n   * no `ProxyZone` could be found.\n   * @returns an observable that emits whenever the task state changes.\n   */\n  static setup(): Observable<TaskState> {\n    if (Zone === undefined) {\n      throw Error('Could not find ZoneJS. For test harnesses running in TestBed, ' +\n        'ZoneJS needs to be installed.');\n    }\n\n    // tslint:disable-next-line:variable-name\n    const ProxyZoneSpec = (Zone as any)['ProxyZoneSpec'] as ProxyZoneStatic|undefined;\n\n    // If there is no \"ProxyZoneSpec\" installed, we throw an error and recommend\n    // setting up the proxy zone by pulling in the testing bundle.\n    if (!ProxyZoneSpec) {\n      throw Error(\n        'ProxyZoneSpec is needed for the test harnesses but could not be found. ' +\n        'Please make sure that your environment includes zone.js/dist/zone-testing.js');\n    }\n\n    // Ensure that there is a proxy zone instance set up, and get\n    // a reference to the instance if present.\n    const zoneSpec = ProxyZoneSpec.assertPresent() as PatchedProxyZone;\n\n    // If there already is a delegate registered in the proxy zone, and it\n    // is type of the custom task state interceptor, we just use that state\n    // observable. This allows us to only intercept Zone once per test\n    // (similar to how `fakeAsync` or `async` work).\n    if (zoneSpec[stateObservableSymbol]) {\n      return zoneSpec[stateObservableSymbol]!;\n    }\n\n    // Since we intercept on environment creation and the fixture has been\n    // created before, we might have missed tasks scheduled before. Fortunately\n    // the proxy zone keeps track of the previous task state, so we can just pass\n    // this as initial state to the task zone interceptor.\n    const interceptor = new TaskStateZoneInterceptor(zoneSpec.lastTaskState);\n    const zoneSpecOnHasTask = zoneSpec.onHasTask.bind(zoneSpec);\n\n    // We setup the task state interceptor in the `ProxyZone`. Note that we cannot register\n    // the interceptor as a new proxy zone delegate because it would mean that other zone\n    // delegates (e.g. `FakeAsyncTestZone` or `AsyncTestZone`) can accidentally overwrite/disable\n    // our interceptor. Since we just intend to monitor the task state of the proxy zone, it is\n    // sufficient to just patch the proxy zone. This also avoids that we interfere with the task\n    // queue scheduling logic.\n    zoneSpec.onHasTask = function(...args: [ZoneDelegate, Zone, Zone, HasTaskState]) {\n      zoneSpecOnHasTask(...args);\n      interceptor.onHasTask(...args);\n    };\n\n    return zoneSpec[stateObservableSymbol] = interceptor.state;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModifierKeys} from '@angular/cdk/testing';\n\n/**\n * Creates a browser MouseEvent with the specified options.\n * @docs-private\n */\nexport function createMouseEvent(type: string, clientX = 0, clientY = 0, button = 0) {\n  const event = document.createEvent('MouseEvent');\n  const originalPreventDefault = event.preventDefault.bind(event);\n\n  // Note: We cannot determine the position of the mouse event based on the screen\n  // because the dimensions and position of the browser window are not available\n  // To provide reasonable `screenX` and `screenY` coordinates, we simply use the\n  // client coordinates as if the browser is opened in fullscreen.\n  const screenX = clientX;\n  const screenY = clientY;\n\n  event.initMouseEvent(type,\n    /* canBubble */ true,\n    /* cancelable */ true,\n    /* view */ window,\n    /* detail */ 0,\n    /* screenX */ screenX,\n    /* screenY */ screenY,\n    /* clientX */ clientX,\n    /* clientY */ clientY,\n    /* ctrlKey */ false,\n    /* altKey */ false,\n    /* shiftKey */ false,\n    /* metaKey */ false,\n    /* button */ button,\n    /* relatedTarget */ null);\n\n  // `initMouseEvent` doesn't allow us to pass the `buttons` and\n  // defaults it to 0 which looks like a fake event.\n  defineReadonlyEventProperty(event, 'buttons', 1);\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    defineReadonlyEventProperty(event, 'defaultPrevented', true);\n    return originalPreventDefault();\n  };\n\n  return event;\n}\n\n/**\n * Creates a browser `PointerEvent` with the specified options. Pointer events\n * by default will appear as if they are the primary pointer of their type.\n * https://www.w3.org/TR/pointerevents2/#dom-pointerevent-isprimary.\n *\n * For example, if pointer events for a multi-touch interaction are created, the non-primary\n * pointer touches would need to be represented by non-primary pointer events.\n *\n * @docs-private\n */\nexport function createPointerEvent(type: string, clientX = 0, clientY = 0,\n                                   options: PointerEventInit = {isPrimary: true}) {\n  return new PointerEvent(type, {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n    clientX,\n    clientY,\n    ...options,\n  });\n}\n\n/**\n * Creates a browser TouchEvent with the specified pointer coordinates.\n * @docs-private\n */\nexport function createTouchEvent(type: string, pageX = 0, pageY = 0) {\n  // In favor of creating events that work for most of the browsers, the event is created\n  // as a basic UI Event. The necessary details for the event will be set manually.\n  const event = document.createEvent('UIEvent');\n  const touchDetails = {pageX, pageY};\n\n  // TS3.6 removes the initUIEvent method and suggests porting to \"new UIEvent()\".\n  (event as any).initUIEvent(type, true, true, window, 0);\n\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\n  // the touch details.\n  defineReadonlyEventProperty(event, 'touches', [touchDetails]);\n  defineReadonlyEventProperty(event, 'targetTouches', [touchDetails]);\n  defineReadonlyEventProperty(event, 'changedTouches', [touchDetails]);\n\n  return event;\n}\n\n/**\n * Creates a keyboard event with the specified key and modifiers.\n * @docs-private\n */\nexport function createKeyboardEvent(type: string, keyCode: number = 0, key: string = '',\n                                    modifiers: ModifierKeys = {}) {\n  const event = document.createEvent('KeyboardEvent');\n  const originalPreventDefault = event.preventDefault.bind(event);\n\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\n  // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyEvent.\n  if ((event as any).initKeyEvent !== undefined) {\n    (event as any).initKeyEvent(type, true, true, window, modifiers.control, modifiers.alt,\n        modifiers.shift, modifiers.meta, keyCode);\n  } else {\n    // `initKeyboardEvent` expects to receive modifiers as a whitespace-delimited string\n    // See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent\n    let modifiersList = '';\n\n    if (modifiers.control) {\n      modifiersList += 'Control ';\n    }\n\n    if (modifiers.alt) {\n      modifiersList += 'Alt ';\n    }\n\n    if (modifiers.shift) {\n      modifiersList += 'Shift ';\n    }\n\n    if (modifiers.meta) {\n      modifiersList += 'Meta ';\n    }\n\n    // TS3.6 removed the `initKeyboardEvent` method and suggested porting to\n    // `new KeyboardEvent()` constructor. We cannot use that as we support IE11.\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent.\n    (event as any).initKeyboardEvent(type,\n        true, /* canBubble */\n        true, /* cancelable */\n        window, /* view */\n        0, /* char */\n        key, /* key */\n        0, /* location */\n        modifiersList.trim(), /* modifiersList */\n        false /* repeat */);\n  }\n\n  // Webkit Browsers don't set the keyCode when calling the init function.\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\n  defineReadonlyEventProperty(event, 'keyCode', keyCode);\n  defineReadonlyEventProperty(event, 'key', key);\n  defineReadonlyEventProperty(event, 'ctrlKey', !!modifiers.control);\n  defineReadonlyEventProperty(event, 'altKey', !!modifiers.alt);\n  defineReadonlyEventProperty(event, 'shiftKey', !!modifiers.shift);\n  defineReadonlyEventProperty(event, 'metaKey', !!modifiers.meta);\n\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\n  event.preventDefault = function() {\n    defineReadonlyEventProperty(event, 'defaultPrevented', true);\n    return originalPreventDefault();\n  };\n\n  return event;\n}\n\n/**\n * Creates a fake event object with any desired event type.\n * @docs-private\n */\nexport function createFakeEvent(type: string, canBubble = false, cancelable = true) {\n  const event = document.createEvent('Event');\n  event.initEvent(type, canBubble, cancelable);\n  return event;\n}\n\n/**\n * Defines a readonly property on the given event object. Readonly properties on an event object\n * are always set as configurable as that matches default readonly properties for DOM event objects.\n */\nfunction defineReadonlyEventProperty(event: Event, propertyName: string, value: any) {\n  Object.defineProperty(event, propertyName, {get: () => value, configurable: true});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModifierKeys} from '@angular/cdk/testing';\nimport {\n  createFakeEvent,\n  createKeyboardEvent,\n  createMouseEvent,\n  createPointerEvent,\n  createTouchEvent,\n} from './event-objects';\n\n/**\n * Utility to dispatch any event on a Node.\n * @docs-private\n */\nexport function dispatchEvent<T extends Event>(node: Node | Window, event: T): T {\n  node.dispatchEvent(event);\n  return event;\n}\n\n/**\n * Shorthand to dispatch a fake event on a specified node.\n * @docs-private\n */\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\n}\n\n/**\n * Shorthand to dispatch a keyboard event with a specified key code and\n * optional modifiers.\n * @docs-private\n */\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode?: number, key?: string,\n                                      modifiers?: ModifierKeys): KeyboardEvent {\n  return dispatchEvent(node,\n      createKeyboardEvent(type, keyCode, key, modifiers));\n}\n\n/**\n * Shorthand to dispatch a mouse event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchMouseEvent(node: Node, type: string, clientX = 0, clientY = 0): MouseEvent {\n  return dispatchEvent(node, createMouseEvent(type, clientX, clientY));\n}\n\n/**\n * Shorthand to dispatch a pointer event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchPointerEvent(node: Node, type: string, clientX = 0, clientY = 0,\n                                     options?: PointerEventInit): PointerEvent {\n  return dispatchEvent(node, createPointerEvent(type, clientX, clientY, options)) as PointerEvent;\n}\n\n/**\n * Shorthand to dispatch a touch event on the specified coordinates.\n * @docs-private\n */\nexport function dispatchTouchEvent(node: Node, type: string, x = 0, y = 0) {\n  return dispatchEvent(node, createTouchEvent(type, x, y));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {dispatchFakeEvent} from './dispatch-events';\n\nfunction triggerFocusChange(element: HTMLElement, event: 'focus' | 'blur') {\n  let eventFired = false;\n  const handler = () => eventFired = true;\n  element.addEventListener(event, handler);\n  element[event]();\n  element.removeEventListener(event, handler);\n  if (!eventFired) {\n    dispatchFakeEvent(element, event);\n  }\n}\n\n/**\n * Patches an elements focus and blur methods to emit events consistently and predictably.\n * This is necessary, because some browsers, like IE11, will call the focus handlers asynchronously,\n * while others won't fire them at all if the browser window is not focused.\n * @docs-private\n */\nexport function patchElementFocus(element: HTMLElement) {\n  element.focus = () => dispatchFakeEvent(element, 'focus');\n  element.blur = () => dispatchFakeEvent(element, 'blur');\n}\n\n/** @docs-private */\nexport function triggerFocus(element: HTMLElement) {\n  triggerFocusChange(element, 'focus');\n}\n\n/** @docs-private */\nexport function triggerBlur(element: HTMLElement) {\n  triggerFocusChange(element, 'blur');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModifierKeys} from '@angular/cdk/testing';\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from './dispatch-events';\nimport {triggerFocus} from './element-focus';\n\n/**\n * Checks whether the given Element is a text input element.\n * @docs-private\n */\nexport function isTextInput(element: Element): element is HTMLInputElement | HTMLTextAreaElement {\n  const nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' || nodeName === 'textarea' ;\n}\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(\n    element: HTMLElement, ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\n/**\n * Focuses an input, sets its value and dispatches\n * the `input` event, simulating the user typing.\n * @param element Element onto which to set the value.\n * @param modifiers Modifier keys that are held while typing.\n * @param keys The keys to send to the element.\n * @docs-private\n */\nexport function typeInElement(element: HTMLElement, modifiers: ModifierKeys,\n                              ...keys: (string | {keyCode?: number, key?: string})[]): void;\n\nexport function typeInElement(element: HTMLElement, ...modifiersAndKeys: any) {\n  const first = modifiersAndKeys[0];\n  let modifiers: ModifierKeys;\n  let rest: (string | {keyCode?: number, key?: string})[];\n  if (typeof first !== 'string' && first.keyCode === undefined && first.key === undefined) {\n    modifiers = first;\n    rest = modifiersAndKeys.slice(1);\n  } else {\n    modifiers = {};\n    rest = modifiersAndKeys;\n  }\n  const keys: {keyCode?: number, key?: string}[] = rest\n      .map(k => typeof k === 'string' ?\n          k.split('').map(c => ({keyCode: c.toUpperCase().charCodeAt(0), key: c})) : [k])\n      .reduce((arr, k) => arr.concat(k), []);\n\n  triggerFocus(element);\n  for (const key of keys) {\n    dispatchKeyboardEvent(element, 'keydown', key.keyCode, key.key, modifiers);\n    dispatchKeyboardEvent(element, 'keypress', key.keyCode, key.key, modifiers);\n    if (isTextInput(element) && key.key && key.key.length === 1) {\n      element.value += key.key;\n      dispatchFakeEvent(element, 'input');\n    }\n    dispatchKeyboardEvent(element, 'keyup', key.keyCode, key.key, modifiers);\n  }\n}\n\n/**\n * Clears the text in an input or textarea element.\n * @docs-private\n */\nexport function clearElement(element: HTMLInputElement | HTMLTextAreaElement) {\n  triggerFocus(element as HTMLElement);\n  element.value = '';\n  dispatchFakeEvent(element, 'input');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// These are private APIs that are used both by the public APIs inside of this package, as well\n// as in unit tests of other entry-points, hence why we need to re-export them through here.\nexport * from './dispatch-events';\nexport * from './event-objects';\nexport * from './element-focus';\nexport * from './type-in-element';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as keyCodes from '@angular/cdk/keycodes';\nimport {\n  _getTextWithExcludedElements,\n  ElementDimensions,\n  ModifierKeys,\n  TestElement,\n  TestKey,\n  TextOptions\n} from '@angular/cdk/testing';\nimport {\n  clearElement,\n  dispatchMouseEvent,\n  dispatchPointerEvent,\n  isTextInput,\n  triggerBlur,\n  triggerFocus,\n  typeInElement,\n} from './fake-events';\n\n/** Maps `TestKey` constants to the `keyCode` and `key` values used by native browser events. */\nconst keyMap = {\n  [TestKey.BACKSPACE]: {keyCode: keyCodes.BACKSPACE, key: 'Backspace'},\n  [TestKey.TAB]: {keyCode: keyCodes.TAB, key: 'Tab'},\n  [TestKey.ENTER]: {keyCode: keyCodes.ENTER, key: 'Enter'},\n  [TestKey.SHIFT]: {keyCode: keyCodes.SHIFT, key: 'Shift'},\n  [TestKey.CONTROL]: {keyCode: keyCodes.CONTROL, key: 'Control'},\n  [TestKey.ALT]: {keyCode: keyCodes.ALT, key: 'Alt'},\n  [TestKey.ESCAPE]: {keyCode: keyCodes.ESCAPE, key: 'Escape'},\n  [TestKey.PAGE_UP]: {keyCode: keyCodes.PAGE_UP, key: 'PageUp'},\n  [TestKey.PAGE_DOWN]: {keyCode: keyCodes.PAGE_DOWN, key: 'PageDown'},\n  [TestKey.END]: {keyCode: keyCodes.END, key: 'End'},\n  [TestKey.HOME]: {keyCode: keyCodes.HOME, key: 'Home'},\n  [TestKey.LEFT_ARROW]: {keyCode: keyCodes.LEFT_ARROW, key: 'ArrowLeft'},\n  [TestKey.UP_ARROW]: {keyCode: keyCodes.UP_ARROW, key: 'ArrowUp'},\n  [TestKey.RIGHT_ARROW]: {keyCode: keyCodes.RIGHT_ARROW, key: 'ArrowRight'},\n  [TestKey.DOWN_ARROW]: {keyCode: keyCodes.DOWN_ARROW, key: 'ArrowDown'},\n  [TestKey.INSERT]: {keyCode: keyCodes.INSERT, key: 'Insert'},\n  [TestKey.DELETE]: {keyCode: keyCodes.DELETE, key: 'Delete'},\n  [TestKey.F1]: {keyCode: keyCodes.F1, key: 'F1'},\n  [TestKey.F2]: {keyCode: keyCodes.F2, key: 'F2'},\n  [TestKey.F3]: {keyCode: keyCodes.F3, key: 'F3'},\n  [TestKey.F4]: {keyCode: keyCodes.F4, key: 'F4'},\n  [TestKey.F5]: {keyCode: keyCodes.F5, key: 'F5'},\n  [TestKey.F6]: {keyCode: keyCodes.F6, key: 'F6'},\n  [TestKey.F7]: {keyCode: keyCodes.F7, key: 'F7'},\n  [TestKey.F8]: {keyCode: keyCodes.F8, key: 'F8'},\n  [TestKey.F9]: {keyCode: keyCodes.F9, key: 'F9'},\n  [TestKey.F10]: {keyCode: keyCodes.F10, key: 'F10'},\n  [TestKey.F11]: {keyCode: keyCodes.F11, key: 'F11'},\n  [TestKey.F12]: {keyCode: keyCodes.F12, key: 'F12'},\n  [TestKey.META]: {keyCode: keyCodes.META, key: 'Meta'}\n};\n\n/** A `TestElement` implementation for unit tests. */\nexport class UnitTestElement implements TestElement {\n  constructor(readonly element: Element, private _stabilize: () => Promise<void>) {}\n\n  async blur(): Promise<void> {\n    triggerBlur(this.element as HTMLElement);\n    await this._stabilize();\n  }\n\n  async clear(): Promise<void> {\n    if (!isTextInput(this.element)) {\n      throw Error('Attempting to clear an invalid element');\n    }\n    clearElement(this.element);\n    await this._stabilize();\n  }\n\n  async click(...args: number[]): Promise<void> {\n    const {left, top, width, height} = await this.getDimensions();\n    const relativeX = args.length ? args[0] : width / 2;\n    const relativeY = args.length ? args[1] : height / 2;\n\n    // Round the computed click position as decimal pixels are not\n    // supported by mouse events and could lead to unexpected results.\n    const clientX = Math.round(left + relativeX);\n    const clientY = Math.round(top + relativeY);\n\n    this._dispatchPointerEventIfSupported('pointerdown', clientX, clientY);\n    dispatchMouseEvent(this.element, 'mousedown', clientX, clientY);\n    this._dispatchPointerEventIfSupported('pointerup', clientX, clientY);\n    dispatchMouseEvent(this.element, 'mouseup', clientX, clientY);\n    dispatchMouseEvent(this.element, 'click', clientX, clientY);\n    await this._stabilize();\n  }\n\n  async focus(): Promise<void> {\n    triggerFocus(this.element as HTMLElement);\n    await this._stabilize();\n  }\n\n  async getCssValue(property: string): Promise<string> {\n    await this._stabilize();\n    // TODO(mmalerba): Consider adding value normalization if we run into common cases where its\n    //  needed.\n    return getComputedStyle(this.element).getPropertyValue(property);\n  }\n\n  async hover(): Promise<void> {\n    this._dispatchPointerEventIfSupported('pointerenter');\n    dispatchMouseEvent(this.element, 'mouseenter');\n    await this._stabilize();\n  }\n\n  async mouseAway(): Promise<void> {\n    this._dispatchPointerEventIfSupported('pointerleave');\n    dispatchMouseEvent(this.element, 'mouseleave');\n    await this._stabilize();\n  }\n\n  async sendKeys(...keys: (string | TestKey)[]): Promise<void>;\n  async sendKeys(modifiers: ModifierKeys, ...keys: (string | TestKey)[]): Promise<void>;\n  async sendKeys(...modifiersAndKeys: any[]): Promise<void> {\n    const args = modifiersAndKeys.map(k => typeof k === 'number' ? keyMap[k as TestKey] : k);\n    typeInElement(this.element as HTMLElement, ...args);\n    await this._stabilize();\n  }\n\n  async text(options?: TextOptions): Promise<string> {\n    await this._stabilize();\n    if (options?.exclude) {\n      return _getTextWithExcludedElements(this.element, options.exclude);\n    }\n    return (this.element.textContent || '').trim();\n  }\n\n  async getAttribute(name: string): Promise<string|null> {\n    await this._stabilize();\n    return this.element.getAttribute(name);\n  }\n\n  async hasClass(name: string): Promise<boolean> {\n    await this._stabilize();\n    return this.element.classList.contains(name);\n  }\n\n  async getDimensions(): Promise<ElementDimensions> {\n    await this._stabilize();\n    return this.element.getBoundingClientRect();\n  }\n\n  async getProperty(name: string): Promise<any> {\n    await this._stabilize();\n    return (this.element as any)[name];\n  }\n\n  async setInputValue(value: string): Promise<void> {\n    (this.element as any).value = value;\n    await this._stabilize();\n  }\n\n  async matchesSelector(selector: string): Promise<boolean> {\n    await this._stabilize();\n    const elementPrototype = Element.prototype as any;\n    return (elementPrototype['matches'] || elementPrototype['msMatchesSelector'])\n        .call(this.element, selector);\n  }\n\n  async isFocused(): Promise<boolean> {\n    await this._stabilize();\n    return document.activeElement === this.element;\n  }\n\n  /**\n   * Dispatches a pointer event on the current element if the browser supports it.\n   * @param name Name of the pointer event to be dispatched.\n   * @param clientX Coordinate of the user's pointer along the X axis.\n   * @param clientY Coordinate of the user's pointer along the Y axis.\n   */\n  private _dispatchPointerEventIfSupported(name: string, clientX?: number, clientY?: number) {\n    // The latest versions of all browsers we support have the new `PointerEvent` API.\n    // Though since we capture the two most recent versions of these browsers, we also\n    // need to support Safari 12 at time of writing. Safari 12 does not have support for this,\n    // so we need to conditionally create and dispatch these events based on feature detection.\n    if (typeof PointerEvent !== 'undefined' && PointerEvent) {\n      dispatchPointerEvent(this.element, name, clientX, clientY);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ComponentHarness,\n  ComponentHarnessConstructor,\n  HarnessEnvironment,\n  HarnessLoader,\n  TestElement\n} from '@angular/cdk/testing';\nimport {ComponentFixture, flush} from '@angular/core/testing';\nimport {Observable} from 'rxjs';\nimport {takeWhile} from 'rxjs/operators';\nimport {TaskState, TaskStateZoneInterceptor} from './task-state-zone-interceptor';\nimport {UnitTestElement} from './unit-test-element';\n\n/** Options to configure the environment. */\nexport interface TestbedHarnessEnvironmentOptions {\n  /** The query function used to find DOM elements. */\n  queryFn: (selector: string, root: Element) => Iterable<Element> | ArrayLike<Element>;\n}\n\n/** The default environment options. */\nconst defaultEnvironmentOptions: TestbedHarnessEnvironmentOptions = {\n  queryFn: (selector: string, root: Element) => root.querySelectorAll(selector)\n};\n\n/** A `HarnessEnvironment` implementation for Angular's Testbed. */\nexport class TestbedHarnessEnvironment extends HarnessEnvironment<Element> {\n  /** Whether the environment has been destroyed. */\n  private _destroyed = false;\n\n  /** Observable that emits whenever the test task state changes. */\n  private _taskState: Observable<TaskState>;\n\n  /** The options for this environment. */\n  private _options: TestbedHarnessEnvironmentOptions;\n\n  protected constructor(rawRootElement: Element, private _fixture: ComponentFixture<unknown>,\n      options?: TestbedHarnessEnvironmentOptions) {\n    super(rawRootElement);\n    this._options = {...defaultEnvironmentOptions, ...options};\n    this._taskState = TaskStateZoneInterceptor.setup();\n    _fixture.componentRef.onDestroy(() => this._destroyed = true);\n  }\n\n  /** Creates a `HarnessLoader` rooted at the given fixture's root element. */\n  static loader(fixture: ComponentFixture<unknown>, options?: TestbedHarnessEnvironmentOptions):\n      HarnessLoader {\n    return new TestbedHarnessEnvironment(fixture.nativeElement, fixture, options);\n  }\n\n  /**\n   * Creates a `HarnessLoader` at the document root. This can be used if harnesses are\n   * located outside of a fixture (e.g. overlays appended to the document body).\n   */\n  static documentRootLoader(fixture: ComponentFixture<unknown>,\n      options?: TestbedHarnessEnvironmentOptions): HarnessLoader {\n    return new TestbedHarnessEnvironment(document.body, fixture, options);\n  }\n\n  /**\n   * Creates an instance of the given harness type, using the fixture's root element as the\n   * harness's host element. This method should be used when creating a harness for the root element\n   * of a fixture, as components do not have the correct selector when they are created as the root\n   * of the fixture.\n   */\n  static async harnessForFixture<T extends ComponentHarness>(\n      fixture: ComponentFixture<unknown>, harnessType: ComponentHarnessConstructor<T>,\n      options?: TestbedHarnessEnvironmentOptions): Promise<T> {\n    const environment = new TestbedHarnessEnvironment(fixture.nativeElement, fixture, options);\n    await environment.forceStabilize();\n    return environment.createComponentHarness(harnessType, fixture.nativeElement);\n  }\n\n  async forceStabilize(): Promise<void> {\n    if (this._destroyed) {\n      throw Error('Harness is attempting to use a fixture that has already been destroyed.');\n    }\n\n    this._fixture.detectChanges();\n    await this._fixture.whenStable();\n  }\n\n  async waitForTasksOutsideAngular(): Promise<void> {\n    // If we run in the fake async zone, we run \"flush\" to run any scheduled tasks. This\n    // ensures that the harnesses behave inside of the FakeAsyncTestZone similar to the\n    // \"AsyncTestZone\" and the root zone (i.e. neither fakeAsync or async). Note that we\n    // cannot just rely on the task state observable to become stable because the state will\n    // never change. This is because the task queue will be only drained if the fake async\n    // zone is being flushed.\n    if (Zone!.current.get('FakeAsyncTestZoneSpec')) {\n      flush();\n    }\n\n    // Wait until the task queue has been drained and the zone is stable. Note that\n    // we cannot rely on \"fixture.whenStable\" since it does not catch tasks scheduled\n    // outside of the Angular zone. For test harnesses, we want to ensure that the\n    // app is fully stabilized and therefore need to use our own zone interceptor.\n    await this._taskState.pipe(takeWhile(state => !state.stable)).toPromise();\n  }\n\n  protected getDocumentRoot(): Element {\n    return document.body;\n  }\n\n  protected createTestElement(element: Element): TestElement {\n    return new UnitTestElement(element, () => this.forceStabilize());\n  }\n\n  protected createEnvironment(element: Element): HarnessEnvironment<Element> {\n    return new TestbedHarnessEnvironment(element, this._fixture, this._options);\n  }\n\n  protected async getAllRawElements(selector: string): Promise<Element[]> {\n    await this.forceStabilize();\n    return Array.from(this._options.queryFn(selector, this.rawRootElement));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './testbed-harness-environment';\nexport * from './unit-test-element';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n"],"names":["keyCodes.BACKSPACE","keyCodes.TAB","keyCodes.ENTER","keyCodes.SHIFT","keyCodes.CONTROL","keyCodes.ALT","keyCodes.ESCAPE","keyCodes.PAGE_UP","keyCodes.PAGE_DOWN","keyCodes.END","keyCodes.HOME","keyCodes.LEFT_ARROW","keyCodes.UP_ARROW","keyCodes.RIGHT_ARROW","keyCodes.DOWN_ARROW","keyCodes.INSERT","keyCodes.DELETE","keyCodes.F1","keyCodes.F2","keyCodes.F3","keyCodes.F4","keyCodes.F5","keyCodes.F6","keyCodes.F7","keyCodes.F8","keyCodes.F9","keyCodes.F10","keyCodes.F11","keyCodes.F12","keyCodes.META"],"mappings":"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"}