{"version":3,"file":"cell.d.ts","sources":["cell.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { ElementRef, TemplateRef } from '@angular/core';\nimport { CanStick, CanStickCtor } from './can-stick';\n/** Base interface for a cell definition. Captures a column's cell template definition. */\nexport interface CellDef {\n    template: TemplateRef<any>;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nexport declare class CdkCellDef implements CellDef {\n    template: TemplateRef<any>;\n    constructor(/** @docs-private */ template: TemplateRef<any>);\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nexport declare class CdkHeaderCellDef implements CellDef {\n    template: TemplateRef<any>;\n    constructor(/** @docs-private */ template: TemplateRef<any>);\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nexport declare class CdkFooterCellDef implements CellDef {\n    template: TemplateRef<any>;\n    constructor(/** @docs-private */ template: TemplateRef<any>);\n}\n/** @docs-private */\ndeclare class CdkColumnDefBase {\n}\ndeclare const _CdkColumnDefBase: CanStickCtor & typeof CdkColumnDefBase;\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nexport declare class CdkColumnDef extends _CdkColumnDefBase implements CanStick {\n    _table?: any;\n    /** Unique name for this column. */\n    get name(): string;\n    set name(name: string);\n    protected _name: string;\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd(): boolean;\n    set stickyEnd(v: boolean);\n    _stickyEnd: boolean;\n    /** @docs-private */\n    cell: CdkCellDef;\n    /** @docs-private */\n    headerCell: CdkHeaderCellDef;\n    /** @docs-private */\n    footerCell: CdkFooterCellDef;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     */\n    cssClassFriendlyName: string;\n    /**\n     * Class name for cells in this column.\n     * @docs-private\n     */\n    _columnCssClassName: string[];\n    constructor(_table?: any);\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    protected _updateColumnCssClassName(): void;\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    protected _setNameInput(value: string): void;\n    static ngAcceptInputType_sticky: BooleanInput;\n    static ngAcceptInputType_stickyEnd: BooleanInput;\n}\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nexport declare class BaseCdkCell {\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef);\n}\n/** Header cell template container that adds the right classes and role. */\nexport declare class CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef);\n}\n/** Footer cell template container that adds the right classes and role. */\nexport declare class CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef);\n}\n/** Cell template container that adds the right classes and role. */\nexport declare class CdkCell extends BaseCdkCell {\n    constructor(columnDef: CdkColumnDef, elementRef: ElementRef);\n}\nexport {};\n"]}