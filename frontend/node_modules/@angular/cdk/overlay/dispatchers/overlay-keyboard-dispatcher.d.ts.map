{"version":3,"file":"overlay-keyboard-dispatcher.d.ts","sources":["overlay-keyboard-dispatcher.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Optional } from '@angular/core';\nimport { OverlayReference } from '../overlay-reference';\nimport { BaseOverlayDispatcher } from './base-overlay-dispatcher';\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nexport declare class OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document: any);\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef: OverlayReference): void;\n    /** Detaches the global keyboard event listener. */\n    protected detach(): void;\n    /** Keyboard event listener that will be attached to the body. */\n    private _keydownListener;\n}\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport declare function OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher: OverlayKeyboardDispatcher, _document: any): OverlayKeyboardDispatcher;\n/** @docs-private @deprecated @breaking-change 8.0.0 */\nexport declare const OVERLAY_KEYBOARD_DISPATCHER_PROVIDER: {\n    provide: typeof OverlayKeyboardDispatcher;\n    deps: (Optional[] | InjectionToken<any>)[];\n    useFactory: typeof OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY;\n};\n"]}