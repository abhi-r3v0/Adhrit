{"version":3,"file":"scroll-strategy-options.d.ts","sources":["scroll-strategy-options.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgZone } from '@angular/core';\nimport { BlockScrollStrategy } from './block-scroll-strategy';\nimport { CloseScrollStrategy, CloseScrollStrategyConfig } from './close-scroll-strategy';\nimport { NoopScrollStrategy } from './noop-scroll-strategy';\nimport { RepositionScrollStrategy, RepositionScrollStrategyConfig } from './reposition-scroll-strategy';\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nexport declare class ScrollStrategyOptions {\n    private _scrollDispatcher;\n    private _viewportRuler;\n    private _ngZone;\n    private _document;\n    constructor(_scrollDispatcher: ScrollDispatcher, _viewportRuler: ViewportRuler, _ngZone: NgZone, document: any);\n    /** Do nothing on scroll. */\n    noop: () => NoopScrollStrategy;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * @param config Configuration to be used inside the scroll strategy.\n     */\n    close: (config?: CloseScrollStrategyConfig | undefined) => CloseScrollStrategy;\n    /** Block scrolling. */\n    block: () => BlockScrollStrategy;\n    /**\n     * Update the overlay's position on scroll.\n     * @param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     */\n    reposition: (config?: RepositionScrollStrategyConfig | undefined) => RepositionScrollStrategy;\n}\n"]}