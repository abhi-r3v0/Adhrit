{"version":3,"file":"radio.directive.d.ts","sources":["radio.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const RADIO_CONTROL_VALUE_ACCESSOR: any;\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\nexport declare class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n    protected el: ElementRef;\n    private renderer;\n    onChange: any;\n    onTouched: any;\n    radioElementsArray: Array<any>;\n    /** Radio button value, will be set to `ngModel` */\n    mdbRadio: any;\n    /** If `true` â€” radio button can be unchecked */\n    uncheckable: boolean;\n    /** Current value of radio component or group */\n    value: any;\n    get isActive(): boolean;\n    onClick(event?: any): void;\n    constructor(el: ElementRef, renderer: Renderer2);\n    ngOnInit(): void;\n    onBlur(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n}\n"]}