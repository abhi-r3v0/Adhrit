{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, QueryList, Renderer2 } from '@angular/core';\nimport { SlideComponent } from './slide.component';\nimport { CarouselConfig } from './carousel.config';\nexport declare enum Direction {\n    UNKNOWN = 0,\n    NEXT = 1,\n    PREV = 2\n}\n/**\n * Base element to create carousel\n */\nexport declare class CarouselComponent implements OnDestroy, AfterViewInit {\n    protected el: ElementRef;\n    private cdRef;\n    private renderer;\n    SWIPE_ACTION: {\n        LEFT: string;\n        RIGHT: string;\n    };\n    _slidesList: QueryList<SlideComponent>;\n    get slides(): SlideComponent[];\n    private _destroy$;\n    protected currentInterval: any;\n    protected isPlaying: boolean;\n    protected destroyed: boolean;\n    protected animationEnd: boolean;\n    protected _currentActiveSlide: number;\n    protected carouselIndicators: any;\n    isBrowser: any;\n    noWrap: boolean;\n    noPause: boolean;\n    isControls: boolean;\n    keyboard: boolean;\n    class: String;\n    type: String;\n    animation: String;\n    activeSlideIndex: number;\n    allowSwipe: boolean;\n    activeSlideChange: EventEmitter<any>;\n    set activeSlide(index: number);\n    get activeSlide(): number;\n    protected _interval: number;\n    checkNavigation(): boolean;\n    checkDots(): boolean;\n    getImg(slide: any): any;\n    get interval(): number;\n    set interval(value: number);\n    get isBs4(): boolean;\n    constructor(config: CarouselConfig, el: ElementRef, platformId: string, cdRef: ChangeDetectorRef, renderer: Renderer2);\n    ngOnDestroy(): void;\n    ngAfterViewInit(): void;\n    swipe(action?: string): void;\n    nextSlide(force?: boolean): void;\n    previousSlide(force?: boolean): void;\n    protected fadeAnimation(goToIndex: number, direction?: any): void;\n    protected slideAnimation(goToIndex: number, direction: any): void;\n    selectSlide(index: number): void;\n    play(): void;\n    pause(): void;\n    getCurrentSlideIndex(): number;\n    isLast(index: number): boolean;\n    private findNextSlideIndex;\n    private _select;\n    private restartTimer;\n    private resetTimer;\n    protected hasClass(el: any, className: any): any;\n    protected classAdd(el: any, className: any): void;\n    protected removeClass(el: any, className: any): void;\n    keyboardControl(event: any): void;\n    focus(): void;\n}\n"]}