{"version":3,"file":"ngx-spinner.component.d.ts","sources":["ngx-spinner.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnDestroy, OnInit, OnChanges, SimpleChange, ChangeDetectorRef } from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { Size, NgxSpinner } from './ngx-spinner.enum';\nexport declare class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n    private spinnerService;\n    private changeDetector;\n    /**\n     * To set backdrop color\n     * Only supports RGBA color format\n     * @memberof NgxSpinnerComponent\n     */\n    bdColor: string;\n    /**\n     * To set spinner size\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    size: Size;\n    /**\n     * To set spinner color(DEFAULTS.SPINNER_COLOR)\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    color: string;\n    /**\n     * To set type of spinner\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    type: string;\n    /**\n     * To toggle fullscreen mode\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    fullScreen: boolean;\n    /**\n     * Spinner name\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    name: string;\n    /**\n     * z-index value\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    zIndex: number;\n    /**\n     * Custom template for spinner/loader\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    template: string;\n    /**\n     * Spinner Object\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    spinner: NgxSpinner;\n    /**\n     * Array for spinner's divs\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    divArray: Array<number>;\n    /**\n     * Counter for div\n     *\n     * @memberof NgxSpinnerComponent\n     *\n     */\n    divCount: number;\n    /**\n     * Show spinner\n     *\n     * @memberof NgxSpinnerComponent\n    **/\n    show: boolean;\n    /**\n     * Unsubscribe from spinner's observable\n     *\n     * @memberof NgxSpinnerComponent\n    **/\n    ngUnsubscribe: Subject<void>;\n    /**\n     * Creates an instance of NgxSpinnerComponent.\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    constructor(spinnerService: NgxSpinnerService, changeDetector: ChangeDetectorRef);\n    /**\n     * Initialization method\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    ngOnInit(): void;\n    /**\n     * To set default ngx-spinner options\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    setDefaultOptions: () => void;\n    /**\n     * On changes event for input variables\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    ngOnChanges(changes: {\n        [propKey: string]: SimpleChange;\n    }): void;\n    /**\n     * To get class for spinner\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    getClass(type: string, size: Size): string;\n    /**\n     * Check if input variables have changed\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    onInputChange(): void;\n    /**\n     * Component destroy event\n     *\n     * @memberof NgxSpinnerComponent\n     */\n    ngOnDestroy(): void;\n}\n"]}